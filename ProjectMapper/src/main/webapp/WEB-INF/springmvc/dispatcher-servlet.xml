<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
	<context:component-scan base-package="kr.or.ddit" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
<!-- 	WAS가 가진 DefaultServlet 으로 처리하던 정적 자원에 대한 요청을   -->
<!-- 	대신 처리할 Simple Handler mapping으로 등록 	-->
	<mvc:resources location="/resources/" mapping="/resources/**" cache-period="0" />
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/webjars/webrtc-adapter/**" location="classpath:/META-INF/resources/webjars/webrtc-adapter/7.4.0/" />   	
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />   	
	<mvc:resources mapping="/kurento-utils/**" location="classpath:/META-INF/resources/" />   	
	<mvc:resources mapping="/uploadFiles/**" location="file://192.168.146.65/192.168.146.65/saveDir/" />
	
<!-- 	handlerMapping, handlerAdapter, validator 를 자동 등록함. -->
	<mvc:annotation-driven >
		<mvc:argument-resolvers>
			<bean class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver" />
		</mvc:argument-resolvers>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<constructor-arg name="objectMapper" ref="objectMapper" /> 
			</bean>
		</mvc:message-converters>	
	</mvc:annotation-driven>
	
<!-- 	JSON 변환시 사용할 ObjectMapper 설정 	-->
	
	<bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean" id="objectMapper">
		<property name="featuresToDisable">
			<array>
				<util:constant static-field="com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATES_AS_TIMESTAMPS"/>
			</array>
		</property>
	</bean>
	
	<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" id="jsonView">
		<property name="objectMapper" ref="objectMapper"></property>
	</bean>
	<mvc:tiles-configurer>
		<mvc:definitions location="/WEB-INF/tiles/*.xml"/>
	</mvc:tiles-configurer>
	
<!-- 	<bean class="kr.or.ddit.case10.view.DownloadView" id="downloadView" /> -->
	
	
	<mvc:view-resolvers>
<!-- 			accept request header를 기준으로 response content 를 협상하는 전략 -->
	
		<mvc:content-negotiation> <!-- 맨 처음에 실행되어야함 협상하는거임 contentType 설정보고 내보냄 son--> 
			<mvc:default-views> <!-- 여기서 마샬링으로 accept에 맞게 내보냄 accept가 없으면 mvc:content-negotiation으로 감 -->
				<ref bean="jsonView"/>
			</mvc:default-views>
		</mvc:content-negotiation> 
<!-- 		lvn == bean id -->
		<mvc:bean-name />
<!-- 		lvn = bean definition name 		-->
		<mvc:tiles />
<!-- 			lvn == prefix + lvn + suffix 경로에 해당하는 싱글 jsp로 응답 전송		 -->
		<mvc:jsp prefix="/WEB-INF/views" suffix=".jsp" /> <!-- 맨 마지막에 실행되어야함 -->
	</mvc:view-resolvers>
	
	<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" id="localeChangeInterceptor">
		<property name="paramName" value="lang"></property>
	</bean>

	<bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver" id="localeResolver"></bean>
	
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/resources/**"/>		
			<ref bean="localeChangeInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
</beans>